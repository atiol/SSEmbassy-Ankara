@model ssembassy_ankara.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>SS Embassy | Registration Page</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.6, font-awesome, Theme style -->
    @Styles.Render("~/css/dashboard")
    @Styles.Render("~/css/datepicker")
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css">
    <style>
        .profile-img-wrapper {
            border: 1px solid #ddd;
            padding: 3px;
        }
        .profile-img-wrapper > img {
            max-width: 75px;
            height: auto;
        }
        .register-box-body .row{
            margin-bottom: 15px;
        }
        .login-box, .register-box {
            width: 550px;
            margin: 7% auto;
            background-color: #040738;
        }
        .login-box, .register-page {
            background-color: #00bcd4 !important;
        }
        .login-logo, .register-logo {
            margin-bottom: 0;
        }
        .register-logo {
            padding-top: 30px;
        }
        .register-box > h5 {
            font-weight: 600;
            font-size: 15px;
            color: white;
        }
    </style>
</head>
<body class="hold-transition register-page">
<div class="register-box">
    <div class="register-logo">
        <a href="@Url.Action("Index", "Home")">
            <img src="@Url.Content("~/Content/img/emblem.png")" alt="South Sudan Embassy Logo"/><br/>
        </a>
    </div>
    <h5 class="text-center">EMBASSY OF SOUTH SUDAN IN TURKEY <br/>STAFF REGISTRATION PANEL</h5>
    <p class="text-red text-center"><small>All fields are mandatory except those labelled (optional)</small></p>
    <div class="register-box-body">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" , role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="divider"></div>
            <div class="row">
                <div class="col-sm-6">
                    <p>Upload Picture (<span class="text-gray">optional</span>) <br /></p>
                    <input type="file" name="ImageFile" accept=".png, .jpg, .jpeg" onchange="loadFile(event)"/>
                </div>
                <div class="col-sm-6">
                    <div class="profile-img-wrapper pull-right">
                        <img class="img-responsive" id="img-preview" src="@Url.Content("~/Content/img/muser.png")" />
                    </div>
                </div>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.FullName, new {@class = "form-control", placeholder = "Full Name"})
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.UserName, new {@class = "form-control", placeholder = "User name for login"})
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Email"})
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password"})
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", placeholder = "Confirm Password"})
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.PhoneNumber, new {id = "phone", @class = "form-control", placeholder = "Telephone"})
                <span class="glyphicon glyphicon-phone form-control-feedback"></span>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    @if (ViewBag.Roles != null)
                    {
                        @Html.DropDownListFor(m => m.UserRoles, (IEnumerable<SelectListItem>) ViewBag.Roles, "Select roles...", new {@class = "form-control"})
                    }
                    else
                    {
                        <small class="text-red">Roles unavailable</small>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    @if (ViewBag.Positions != null)
                    {
                        @Html.DropDownListFor(m => m.Position, (IEnumerable<SelectListItem>) ViewBag.Positions, "Select position...", new {@class = "form-control"})
                    }
                    else
                    {
                        <small class="text-red">Positions unavailable</small>
                    }
                </div>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.ContractStart, new {@class = "form-control datepicker", placeholder = "Contract start date..."})
                <span class="glyphicon glyphicon-calendar form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.ContractEnd, new {@class = "form-control datepicker", placeholder = "Contract End date..."})
                <span class="glyphicon glyphicon-calendar form-control-feedback"></span>
            </div>
            <div class="form-group has-feedback">
                @Html.LabelFor(m => m.Biography) <span class="text-gray">(optional)</span>
                @Html.TextAreaFor(m => m.Biography)
            </div>
            <div class="form-group has-feedback">
                @Html.LabelFor(m => m.Message) <span class="text-gray">(optional)</span>
                @Html.TextAreaFor(m => m.Message)
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <input type="submit" class="btn btn-danger btn-flat pull-right" value="Register" />
                </div>
            </div>
        }
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrapjs")
@Scripts.Render("~/bundles/datepicker")
<script type="text/javascript" src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    $(document).ready(function() {
        tinymce.init({
            selector: 'textarea',
            height: 50,
            menubar: false,
            plugins: [
                'advlist autolink lists link image charmap print preview anchor textcolor',
                'searchreplace visualblocks code fullscreen',
                'insertdatetime media table contextmenu paste code help wordcount'
            ],
            toolbar: 'insert | undo redo |  formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i']
        });

        $('.datepicker').datepicker({
            autoclose: true
        });
    });
</script>
<script>
    var loadFile = function(event) {
        var imgPreview = document.getElementById('img-preview');
        imgPreview.src = URL.createObjectURL(event.target.files[0]);
    }
</script>
</body>
</html>
